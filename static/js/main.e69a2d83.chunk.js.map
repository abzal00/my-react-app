{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","assets/images/prelader.gif","components/Navbar/Navbar.module.css","utils/validdator/object-helpers.js","redux/users-reducer.js","components/common/Preloader/FormsControls/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/user.jsx","components/Users/users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/sidebar-reducer.js","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspenses.js","App.js","index.js","components/common/Preloader/FormsControls/FormsControls.module.css","components/common/Preloader/preloader.js","utils/validdator/validators.js","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js","assets/images/Ava.jfif","components/Users/users.module.css","components/Header/Header.module.css"],"names":["__webpack_require__","d","__webpack_exports__","usersAPI","profileAPI","authAPI","securityAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instanse","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","updateStatus","status","put","savePhoto","photofile","formData","FormData","append","Content-Type","saveProfile","profile","me","login","email","password","rememberMe","captcha","logout","getCaptchaUrl","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Object","D_Programming_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","D_Programming_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","module","exports","p","nav","item","newc","updateObjectArray","items","itemId","objPropName","newObjProps","map","u","objectSpread","users","totalUserCount","isFetching","followingInProgress","requestUsers","page","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","toggleIsFetching","setCurrentPage","sent","setUsers","setUsersTotalCount","totalCount","stop","this","_x","apply","followUnfolowFlow","_ref2","_callee2","apiMethod","actionCreator","_context2","toggleFollowingProgress","resultCode","_x2","_x3","_x4","_x5","_ref3","_callee3","_context3","bind","followSuccess","_x6","_ref4","_callee4","_context4","unfollowSuccess","_x7","totalUsersCount","count","usersReducer","followed","toConsumableArray","filter","Textarea","input","_ref$meta","meta","error","touched","props","D_Programming_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","className","styles","formControl","assign","Input","createField","placeholder","component","validator","text","redux_form__WEBPACK_IMPORTED_MODULE_2__","validate","Boolean","window","location","hostname","match","Navbar","react_default","s","react_router_dom","to","activeClassName","Paginator","_ref$portionSize","portionSize","onPageChanged","objectWithoutProperties","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","defineProperty","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","common_Paginator_Paginator","Users_user","createSelector","usersPage","UsersAPIContainer","_this","_this$props","Fragment","preloader","React","Component","compose","connect","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","getToggleIsFetching","Header","r","header","loginBlock","isAuth","captchaUrl","setAuthtUserData","payload","setCatpchaDataSuccess","getAuthtUserData","_response$data$data","_login","url","authReducer","HeaderContainer","components_Header_Header","auth","LoginReduxForm","reduxForm","form","handleSubmit","log","onSubmit","required","style","formSummaryError","stopSubmit","_error","react_router","initailState","sidebarReducer","inintialized","appReducer","require","createStore","combineReducers","applyMiddleware","store","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","thunkMiddleware","withSuspenses","react","fallback","ProfileContainer","lazy","DialogsContainer","App","catchAllUnhandledError","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","Header_HeaderContainer","components_Navbar_Navbar","path","render","exact","UsersContainer","components_Login_Login","AppContainer","withRouter","promise","Promise","all","MainApp","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_prelader_gif__WEBPACK_IMPORTED_MODULE_1__","_assets_images_prelader_gif__WEBPACK_IMPORTED_MODULE_1___default","Preloader","backgroundColor","preladers","maxLengthCreator","value","maxLength","pagnator","posts","likesCount","newPostText","getUsersProfile","D_Programming_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Programming_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","setUsersProfile","setStatus","file","savePhotoSuccess","_ref5","_callee5","getState","_context5","abrupt","reject","addPostActionCreator","newPost","D_Programming_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","D_Programming_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","postId"],"mappings":"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","file":"static/js/main.e69a2d83.chunk.js","sourcesContent":["import * as axios from \"axios\"\r\nimport { savePhoto } from \"../redux/profile-reducer\";\r\nimport { follow } from \"../redux/users-reducer\";\r\n\r\n\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"1f33042e-b02b-4719-9a6e-8fd0d292d559\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instanse.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instanse.post(`follow/${userId}`, )\r\n\r\n    },\r\n    unfollow(userId) {\r\n        return instanse.delete(`follow/${userId}`,)\r\n\r\n    },\r\n    getProfile(userId = 2) {\r\n        console.warn('Obsolete method. Please prifileAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n            \r\n    }\r\n    \r\n}\r\nexport const profileAPI = {\r\n    \r\n    getProfile(userId ) {\r\n        return instanse.get(`profile/ ` + userId)\r\n            \r\n    },\r\n    getStatus(userId ) {\r\n        return instanse.get(`profile/status/ ` + userId)\r\n            \r\n    },\r\n    updateStatus(status ) {\r\n        return instanse.put(`profile/status/ ` ,{status:status})\r\n            \r\n    },\r\n    \r\n    savePhoto(photofile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photofile)\r\n        return instanse.put(`profile/photo `, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n        } )\r\n            \r\n    } ,\r\n    saveProfile(profile) {\r\n        return instanse.put(`profile `, profile )\r\n            \r\n    } \r\n\r\n    \r\n}\r\n\r\nexport const authAPI= {\r\n    me() {\r\n    return instanse.get(`auth/me`, {\r\n       \r\n    }) \r\n    },\r\n    login( email,password,rememberMe = false,captcha=null) {\r\n    return instanse.post(`auth/login`, { email,password,rememberMe,captcha }) \r\n    },\r\n    logout() {\r\n    return instanse.delete(`auth/login`) \r\n    },\r\n\r\n}\r\nexport const securityAPI= {\r\n  \r\n    getCaptchaUrl() {\r\n    return instanse.get(`security/get-captcha-url`) \r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n// export const getUsersFollow = (currentPage= 1,pageSize= 10) => {\r\n//     return  instanse.get( `follow?page=${currentPage}&count=${pageSize}`, )\r\n//     .then(response => { \r\n//        return response.data\r\n//     });\r\n// }\r\n\r\n\r\n\r\n","\r\n\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\"\r\n\r\nlet initialState = {\r\n    \r\n        \r\n        dialogs:[\r\n        { id: 1, name: 'Adik' },\r\n        { id: 2, name: 'Zaki' },\r\n        { id: 3, name: 'Almat' },\r\n        { id: 4, name: 'Dina' },\r\n        { id: 5, name: 'Anuar' }\r\n        ] ,\r\n        messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How are you?' },\r\n        { id: 3, message: 'I am good!' },\r\n        { id: 4, message: 'Yo' },\r\n        { id: 5, message: 'Yo' }\r\n      \r\n         ],\r\n        \r\n\r\n      \r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    \r\n    \r\n    \r\n    switch (action.type) {\r\n       \r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            \r\n            return {...state,\r\n              \r\n                messages: [...state.messages,  {id: 6, message: body}]\r\n            };\r\n\r\n        \r\n        \r\n             \r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody)=> ({type: SEND_MESSAGE, newMessageBody})\r\n  \r\n\r\n// можно через ретурно можно как выше показано в sendMessageCreator\r\n// export  const updateNewMessageBodyCreator =(body) => {\r\n//       return {\r\n//         type: UPDATE_NEW_MESSAGE_TEXT, body: body\r\n//       }\r\n//     }; не нужен уже потому что мы изпл redux-form\r\n        \r\n\r\n    \r\nexport default dialogsReducer;\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/prelader.504b535c.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3YzG2\",\"item\":\"Navbar_item__20Ia1\",\"newc\":\"Navbar_newc__myBV_\"};","export const updateObjectArray = (items, itemId, objPropName, newObjProps) =>  {\r\n\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n\r\n}","import { usersAPI } from \"../api/api\"\r\nimport { updateObjectArray } from \"../utils/validdator/object-helpers\"\r\n\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nconst FOLLOW = \"FOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\nlet initialState = {\r\n\r\n\r\n\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n   \r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, \"id\", {followed: true})\r\n                //было до Рефакторинга\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: true }\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users,action.userId,\"id\", {followed: false})\r\n            }\r\n\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUserCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : [...state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        }\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nconst followUnfolowFlow = async (dispatch, userId,apiMethod, actionCreator ) => {\r\n    \r\n\r\n    \r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n\r\n\r\n    \r\n}\r\n\r\n// ниже let можно убрать, followUnfolowFlow нужно вписать \r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n\r\n        let apiMethod = usersAPI.follow.bind(usersAPI)\r\n        let actionCreator = followSuccess;\r\n//ЕЕсли поменять местами в функ-й followUnfolowFlow не будт работать, нельзя менять местами АргумеТТЫ\r\n        followUnfolowFlow(dispatch, userId,apiMethod, actionCreator )\r\n// followUnfolowFlow с помошью этой функции мы можем соротить код определоно выше нижней уже не надо\r\n        \r\n        // dispatch(toggleFollowingProgress(true, userId))\r\n        // let response = await apiMethod(userId)\r\n\r\n        // if (response.data.resultCode === 0) {\r\n        //     dispatch(actionCreator(userId));\r\n        // }\r\n        // dispatch(toggleFollowingProgress(false, userId))\r\n\r\n\r\n    }\r\n}\r\n//зделали похожими и за рефакторели follow, unfollow on folowUnfolowFlow\r\n\r\n// еще сокрощяем без let. Потому что мы можем определить в параметре  \r\nexport const unfollow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        // опрделяем в параметре followUnfolowFlow\r\n        // let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n        // let actionCreator = unfollowSuccess\r\n        \r\n        followUnfolowFlow(dispatch, userId, \r\n            usersAPI.unfollow.bind(usersAPI),unfollowSuccess,\r\n         )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW, userId\r\n\r\n})\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport default usersReducer;\r\n\r\n\r\n","import React from \"react\"\r\nimport { Field } from \"redux-form\";\r\nimport styles from \"./FormsControls.module.css\"\r\n\r\nexport const Textarea = ({ input, meta:{error, touched}, ...props }) => {\r\n    // Тут было meta.error && meta.touched мы поместили в аргумету и прировняли там Textarea\r\n\r\n    const hasError = error && touched;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            { hasError && <span >{error}</span>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\r\n\r\n    const hasError = meta.error && meta.touched;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            { hasError && <span >{meta.error}</span>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n//Код ниже props могут не быть из за этого пишем props={} равно пустому объекту\r\n\r\nexport const createField = (placeholder, name, component, validator, props={}, text=\"\") =>(\r\n<div>\r\n        <Field placeholder={placeholder} name={name}\r\n            component={component} validate={validator} \r\n            {...props} /> {text} \r\n        \r\n    </div>\r\n)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/profile' activeClassName={s.newc}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.newc}`}>\r\n            <NavLink to='/dialogs' activeClassName={s.newc}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='users'>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='News'>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='Music'>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='Settings'>Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\"\r\n\r\n\r\n\r\n\r\nlet Paginator = ({portionSize =25, totalUserCount, currentPage, onPageChanged, ...props}) => {\r\n   \r\n\r\n    let pagesCount = Math.ceil(totalUserCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i < pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [ portionNumber, setPortionNumber  ] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\nreturn <div className={styles.paginator}> \r\n    {portionNumber > 1 && <button onClick = {() => {setPortionNumber(portionNumber -1 )} }> Prev</button> } \r\n    {pages \r\n    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n    .map((p) => {\r\n        return <span className={cn({ \r\n            [styles.selectedPage] : currentPage === p \r\n        }, styles.pageNumber) }\r\n            key={p}\r\n            onClick={(e) => {\r\n                onPageChanged(p);\r\n            }}> {p} </span>\r\n    })}\r\n\r\n    {portionCount > portionNumber && \r\n    <button onClick={() => {setPortionNumber(portionNumber + 1 )} }> Next </button> }\r\n</div>\r\n\r\n}\r\n\r\n\r\n\r\nexport default Paginator","import React from 'react'\r\nimport styles from './users.module.css'\r\nimport * as axios from 'axios';\r\nimport userPhoto from '../../assets/images/Ava.jfif'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\n\r\n\r\n\r\nlet User = ({user, ...props} ) => {\r\n\r\n    \r\n\r\n    return (\r\n    \r\n\r\n        <div>\r\n\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id} >\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed ?\r\n                        <button disabled={props.followingInProgress\r\n                            .some(id => id === user.id)} onClick={() => { props.unfollow(user.id) }}>unfollow</button> :\r\n                        <button disabled={props.followingInProgress\r\n                            .some(id => id === user.id)} onClick={() => { props.follow(user.id) }}>follow</button>}\r\n\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div> {user.name}  </div>\r\n                    <div> {user.status} </div>\r\n                </span>\r\n                <span>\r\n                    <div> {\"user.location.city\"} </div>\r\n                    <div> {\"user.location.contry\"} </div>\r\n                </span>\r\n            </span>\r\n\r\n\r\n\r\n        </div>)\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport styles from './users.module.css'\r\nimport * as axios from 'axios';\r\nimport userPhoto from '../../assets/images/Ava.jfif'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './user';\r\n\r\n\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n    // debugger;\r\n    // let pagesCount = Math.ceil(props.totalUserCount / props.pageSize);\r\n\r\n    // let pages = [];\r\n\r\n    // for (let i = 1; i < pagesCount; i++) {\r\n    //     pages.push(i)\r\n    // }\r\n\r\n\r\n\r\n    return <div>\r\n\r\n        <Paginator currentPage = {props.currentPage} pageSize={props.pageSize} totalUserCount={props.totalUserCount} \r\n        styles = {props.styles} onPageChanged={props.onPageChanged} />\r\n        {/* <div>\r\n            {pages.map(p => {\r\n                return (<span className={props.currentPage === p && styles.selectedPage}\r\n                    onClick={(e) => {\r\n                        props.onPageChanged(p);\r\n                    }}> {p} </span>)\r\n            })}\r\n        </div> */}\r\n        <div>\r\n        {\r\n            props.users.map(u => <User key={u.id} user={u} unfollow={props.unfollow} \r\n                follow={props.follow} followingInProgress={props.followingInProgress}/>\r\n                \r\n                  \r\n\r\n            )\r\n        }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users","import { createSelector } from \"reselect\"\r\n\r\n\r\n// до getUsersSuperSlector улудшает фильтрацию сохрания массив и каждый раз \r\n//проверяет что массив не изменился, если нет то оставляет как было сохроняе в кэш-е\r\nconst getUsersSlector = (state) =>{\r\n   return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector( getUsersSlector, (users) => {\r\n  \r\n   return users.filter(u => true)\r\n}) \r\n\r\nexport const getTotalUserCount = (state) =>{\r\n   return state.usersPage.totalUserCount\r\n}\r\nexport const getCurrentPage = (state) =>{\r\n   return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) =>{\r\n   return  state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) =>{\r\n   return   state.usersPage.followingInProgress\r\n}\r\nexport const getToggleIsFetching = (state) =>{\r\n   return  state.usersPage.toggleIsFetching\r\n}\r\nexport const getPageSize = (state) =>{\r\n   return  state.usersPage.pageSize\r\n}\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Users from './users'\r\nimport { follow, unfollow, requestUsers, setCurrentPage,  toggleFollowingProgress, toggleIsFetching,  } from '../../redux/users-reducer'\r\nimport Preloader from '../common/Preloader/preloader'\r\nimport { compose } from 'redux'\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getToggleIsFetching, getTotalUserCount, getUsers } from '../../redux/users-selectors'\r\n\r\n\r\n\r\nclass UsersAPIContainer extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        \r\n        const {currentPage, pageSize} = this.props\r\n\r\n        // мы заменели this.props.currentPage,pageSize верхним  const. Ниже  onPageChanged оставил как было \r\n        \r\n        this.props.getUsers(currentPage,pageSize)\r\n        // this.props.toggleIsFetching(true)\r\n        // usersAPI.getUsers(this.props.currentPage,this.props.pageSize).then(data => {\r\n            \r\n        //     this.props.toggleIsFetching(false)\r\n        //     this.props.setUsers(data.items);\r\n        //     this.props.setUsersTotalCount(data.totalCount);\r\n        // })\r\n        // this.props.toggleIsFetching(true)\r\n\r\n\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber,this.props.pageSize)\r\n        //this.props.setCurrentPage не прогружает юзеров с сервера \r\n        // не отображаеться жырным шрифтом страницы нашел проблему не было setCurrentPage\r\n        // this.props.setCurrentPage(pageNumber);\r\n        // this.props.toggleIsFetching(true)\r\n        // usersAPI.getUsers(pageNumber,this.props.pageSize)\r\n        // .then(data => {\r\n        //     this.props.toggleIsFetching(false)\r\n        //     this.props.setUsers( data.items)\r\n        // });\r\n\r\n    }\r\n    render() {\r\n        \r\n        return <>\r\n            {this.props.isFetching ?\r\n             <Preloader/>\r\n             : null}\r\n            <Users totalUserCount={this.props.totalUserCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage} \r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow} \r\n                followingInProgress={this.props.followingInProgress }\r\n                toggleIsFetching={this.props.toggleIsFetching}\r\n                />\r\n        </>\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n//ниже новая версия \r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUserCount: state.usersPage.totalUserCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//         toggleIsFetching: state.usersPage.toggleIsFetching\r\n//     }\r\n// }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching:getIsFetching(state),\r\n        followingInProgress:getFollowingInProgress(state),\r\n        toggleIsFetching: getToggleIsFetching(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (usersId) => {\r\n//             dispatch(followAC(usersId));\r\n//         },\r\n//         unfollow: (usersId) => {\r\n//             dispatch(unfollowAC(usersId));\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users));\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetchingAC: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n// before compose > let withUsersRedirect = withAuthRedirect(UsersAPIContainer)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,  {follow,unfollow,setCurrentPage, \r\n        toggleIsFetching,toggleFollowingProgress,getUsers: requestUsers\r\n        }),\r\n       // withAuthRedirect\r\n)\r\n\r\n(UsersAPIContainer)\r\n\r\n// export default connect(mapStateToProps,  {\r\n//             follow,\r\n//             unfollow,\r\n//             setCurrentPage,\r\n//             toggleIsFetching,\r\n//             toggleFollowingProgress,\r\n//             getUsers\r\n//     })(withUsersRedirect);\r\n   ","import React from 'react';\r\nimport r from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n  \r\n\r\n  \r\n    return <header className={r.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={r.loginBlock}>\r\n          { props.isAuth \r\n          ? <div>{props.login} - <button onClick={props.logout}>log out</button></div>\r\n           : <NavLink to={'/login'}>Login </NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../api/api\";\r\n\r\n\r\n//refactoring \r\nconst SET_USER_DATA = \"auth/SET_USER_DATA\"\r\nconst SET_CAPTCHA_DATA_SUCCESS = \"auth/SET_CAPTCHA_DATA_SUCCESS\"\r\n\r\n\r\n\r\nlet initialState = {\r\n\r\n\r\n\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n    // isFetching: false\r\n\r\n\r\n\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case SET_CAPTCHA_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                // isAuth: true\r\n\r\n\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\nexport const setAuthtUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } })\r\nexport const setCatpchaDataSuccess = (captchaUrl) =>\r\n ({ type: SET_CAPTCHA_DATA_SUCCESS, payload: {captchaUrl } })\r\n\r\nexport const getAuthtUserData = () => async (dispatch) => {\r\n\r\n    //Ощибка не надо ретурн делаль из за этого у меня показыбался что нужно залогииться \r\n    // return(dispatch) => {\r\n    // используем метод async await ниже //\r\n    //return \r\n    // authAPI.me()\r\n    // .then(response => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data\r\n        dispatch(setAuthtUserData(id, email, login, true))\r\n    }\r\n\r\n    // })\r\n    // }\r\n}\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n            if (response.data.resultCode === 0) {\r\n\r\n                dispatch(getAuthtUserData())\r\n            }\r\n            else {\r\n                if(response.data.resultCode === 10) {\r\n                    dispatch(getCaptchaUrl())\r\n                }\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", { _error: message }));\r\n            }\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n\r\n    const response = await securityAPI.getCaptchaUrl()\r\n\r\n    const captchaUrl = response.data.url \r\n           \r\n          dispatch(setCatpchaDataSuccess(captchaUrl));\r\n}\r\n            \r\nexport const logout = () => (dispatch) => {\r\n\r\n\r\n    authAPI.logout()\r\n        .then(response => {\r\n\r\n            if (response.data.resultCode === 0) {\r\n\r\n                dispatch(setAuthtUserData(null, null, null, false))\r\n            }\r\n\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default authReducer;\r\n\r\n\r\n","import React from 'react';\r\nimport Header from './Header';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {   logout } from '../../redux/auth-reducer';\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n   \r\n    \r\n    render() {\r\n    \r\n        \r\n    return <Header {...this.props} />\r\n}\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n   \r\n})\r\n \r\nexport default connect (mapStateToProps, { logout})  (HeaderContainer);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {  reduxForm } from 'redux-form';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { required } from '../../utils/validdator/validators';\r\nimport { createField, Input } from '../common/Preloader/FormsControls/FormsControls';\r\nimport style from './../common/Preloader/FormsControls/FormsControls.module.css'\r\n\r\n// Props можно сделать без написания props, обьектами \r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl})  => {\r\n    console.log(\"rerender\")\r\n    return (\r\n\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            \r\n            {createField(\"Login\",\"email\",Input,[required])}\r\n            {createField(\"Password\",\"password\",Input,[required], {type: \"password\"}) }\r\n            {createField(null, \"rememberMe\", Input, null, {type: \"checkbox\"}, \" remember me\" ) }\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl && createField(\"simbols from anibot \", \"captcha\", Input, [required], {}  ) }\r\n\r\n       \r\n{/*    БЫЛ СДЕЛАН РЕФАКТОРИНГ УНИВЕРСАЛЬНАЯ ФУНКЦИЯ \r\n            <div>\r\n                <Field placeholder={\"Password\" } name={\"password\"}  type={\"password\"}\r\n                component={Input} validate={[required]}/>\r\n                \r\n            </div>\r\n\r\n            <div>\r\n                <Field type={\"checkbox\" } name={\"rememberMe\"} \r\n                component={Input} />\r\n                remember me\r\n            </div> */}\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ // <----- THIS IS THE IMPORTANT PART!\r\n    form: 'login'                           // a unique name for this form\r\n    // fields: ['firstName', 'lastName', 'email'] // all the fields in your form\r\n  })(LoginForm);\r\n\r\nconst Login = (props)  => {\r\n    const onSubmit = (formData) =>{\r\n    // console.log(formData)\r\n    props.login(formData.email , formData.password, formData.rememberMe, formData.captcha)\r\n}\r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login </h1>\r\n        < LoginReduxForm onSubmit={onSubmit} captchaUrl = {props.captchaUrl} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login) \r\n","let initailState = {\r\n   \r\n     \r\n}\r\n\r\nconst sidebarReducer = (state = initailState, action) => {\r\n\r\nreturn state;\r\n}\r\n\r\nexport default sidebarReducer;","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthtUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS= \"INITIALIZED_SUCCESS\"\r\n\r\n\r\n\r\nlet initialState = {\r\n    \r\n        \r\n       \r\n    inintialized: false,\r\n   \r\n    // isFetching: false\r\n        \r\n         \r\n\r\n      \r\n};\r\n\r\nconst appReducer = (state = initialState, action) => { \r\n    \r\n  \r\n    \r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: \r\n        return {...state,\r\n            inintialized: true\r\n           \r\n        }\r\n        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\nexport const inintializedSuccess=  ()=> ({type: INITIALIZED_SUCCESS }) \r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n        \r\n    let promise = dispatch(getAuthtUserData());\r\n    \r\n    \r\n    // dispatch(samethingelse());\r\n    // dispatch(samethingelse());\r\n    Promise.all([promise])\r\n    .then(() => {\r\n        dispatch(inintializedSuccess())\r\n    })\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n    \r\nexport default appReducer;\r\n\r\n \r\n","import profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth:authReducer,\r\n    form:formReducer,\r\n    app: appReducer\r\n   \r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store=store;\r\n\r\nexport default store; \r\n\r\n\r\n\r\n ","\r\nimport React, { Suspense } from 'react'\r\n\r\n\r\n\r\n\r\n\r\nexport const withSuspenses = (Component) => {\r\n    return (props) => { \r\n        return  <Suspense fallback={<div>Loading...</div>}>\r\n    <Component {...props} />\r\n  </Suspense>\r\n  \r\n  }\r\n   \r\n   \r\n}\r\n","import React, { Component, Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Provider } from 'react-redux';\r\nimport { Route, BrowserRouter, withRouter, Switch, Redirect } from 'react-router-dom';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { getAuthtUserData } from './redux/auth-reducer';\r\nimport { compose } from 'redux';\r\nimport store from './redux/redux-store';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/preloader';\r\nimport { withSuspenses } from './hoc/withSuspenses';\r\n\r\n//import ProfileContainer from './components/Profile/ProfileContainer';\r\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends Component {\r\n\r\n  catchAllUnhandledError = (promiseRejectionEvent) => {\r\n    alert(\"some error orurent\")\r\n  }\r\n  componentDidMount() {\r\n\r\n    this.props.initializeApp()\r\n\r\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledError);\r\n    // authAPI.me()\r\n    // .then(response => {\r\n\r\n    //     if(response.data.resultCode === 0) {\r\n    //         let {id, email, login} = response.data.data\r\n    //         this.props.seAuthtUserData(id, email, login )\r\n    //     }\r\n\r\n    // })\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledError);\r\n  }\r\n  render() {\r\n\r\n    if (!this.props.inintialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className='app-wrapper-content'>\r\n          {/* <Route  path='/dialogs' component={Dialogs} />\r\n          <Route path='/profile' component={Profile} /> */}\r\n\r\n          <Switch>\r\n            <Route path='/dialogs'\r\n              render={withSuspenses(DialogsContainer)} />\r\n\r\n\r\n            <Route exact path='/'\r\n              render={() => <Redirect to={\"/profile\"} />} />\r\n\r\n            <Route path='/profile/:userId?'\r\n              render={withSuspenses(ProfileContainer)} />\r\n\r\n            <Route path='/users'\r\n              render={() => <UsersContainer />} />\r\n\r\n            {/* проверка Switch ниже нужно соблюдать порядочность  */}\r\n            {/* <Route path='/login/facebook'\r\n              render={() => <div>Facebook</div>} /> */}\r\n            <Route path='/login'\r\n              render={() => <Login />} />\r\n            <Route path='*'\r\n              render={() => <div>404 file not found </div>} />\r\n\r\n\r\n          </Switch>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  inintialized: state.app.inintialized\r\n})\r\n\r\n\r\n\r\nlet AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp }))(App);\r\n\r\n\r\n\r\nconst MainApp = (props) => {\r\n  return <BrowserRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </ Provider>\r\n  </BrowserRouter>\r\n}\r\n\r\nexport default MainApp","\r\nimport * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './App';\r\n\r\n\r\n  ReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3ULD3\",\"error\":\"FormsControls_error__1d0ID\",\"formSummaryError\":\"FormsControls_formSummaryError__23Bkt\"};","import React from 'react'\r\nimport preladers from '../../../assets/images/prelader.gif'\r\n\r\nlet Preloader= (props)=>{\r\n   return<div style={{backgroundColor:'white'}} >\r\n        <img src={preladers} />  </div>\r\n\r\n}\r\n\r\nexport default Preloader;","import React from 'react'\r\n\r\n\r\nexport const required = (value) => {\r\n    if (value) return undefined\r\n        return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength ) return `Max length is ${maxLength} symbols`\r\n        return undefined\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__33A87\",\"selectedPage\":\"Paginator_selectedPage__38JY9\",\"pagnator\":\"Paginator_pagnator__MSLNp\"};","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI, usersAPI } from \"../api/api\";\r\n\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT' redux-form\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\nlet initialState = {\r\n\r\n    posts: [\r\n        { id: 1, message: 'Hi,how are you4?', likesCount: '16' },\r\n        { id: 2, message: 'My first post', likesCount: '21' },\r\n        { id: 2, message: 'Nice', likesCount: '11' },\r\n        { id: 2, message: 'Good job men', likesCount: '25' }\r\n\r\n\r\n\r\n    ],\r\n    newPostText: \" \",\r\n    profile: null,\r\n    status: \"\"\r\n\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                newPostText: ' ',\r\n                posts: [...state.posts, newPost],\r\n\r\n            };\r\n\r\n        //Ниже как было раньше \r\n        // let stateCopy ={...state};\r\n        // stateCopy.posts=[...state.posts]\r\n        // stateCopy.posts.push(newPost);\r\n        // stateCopy.newPostText = ' ';\r\n        // return stateCopy;\r\n\r\n\r\n        //redux-form потключили и это не надо \r\n        // case UPDATE_NEW_POST_TEXT:\r\n        //     return {...state,\r\n        //         newPostText: action.text\r\n        //     };\r\n        case SET_USERS_PROFILE:\r\n            return { ...state, profile: action.profile };\r\n        case SET_STATUS:\r\n            return { ...state, status: action.status };\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return { ...state, profile: {...state.profile, photos: action.photos} };\r\n\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id != action.postId) }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//Написал два раза диспать выдоло ошибку (dispatch) => \r\nexport const getUsersProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n\r\n    dispatch(setUsersProfile(response.data));\r\n\r\n\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n\r\n    let response = await profileAPI.getStatus(userId)\r\n\r\n    dispatch(setStatus(response.data));\r\n\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    // try{\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n    \r\n    // catch(error) {\r\n    //     debugger\r\n\r\n    // }\r\n\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n         dispatch(getUsersProfile(userId));\r\n    } else {\r\n        // dispatch(stopSubmit(\"edit-profile\", { \"contacts\":{ \"facebook\": response.data.messages[0]} }));\r\n        // //выводим общую ошибку ниже код\r\n         dispatch(stopSubmit(\"edit-profile\", { _error: response.data.messages[0] }));\r\n         return Promise.reject(response.data.messages[0] )\r\n    }\r\n    \r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: 'ADD-POST', newPostText })\r\nexport const setUsersProfile = (profile) => ({ type: 'SET_USERS_PROFILE', profile })\r\nexport const setStatus = (status) => ({ type: 'SET_STATUS', status })\r\nexport const deletePost = (postId) => ({ type: 'DELETE_POST', postId })\r\nexport const savePhotoSuccess = (photos) => ({ type: 'SAVE_PHOTO_SUCCESS', photos })\r\n// добавили redux-form,  export  const updateNewPostTextActionCreator =() =>\r\n//  ({ type:'UPDATE-NEW-POST-TEXT',  })\r\n\r\n//Если у нас есть константы или кокиета не безконечные обьекты то мы можем \r\n//использовать switch Ниже показано код до использования switch \r\n//     if (action.type === ADD_POST){\r\n//         let newPost = {\r\n//             id:5,\r\n//             message: state.newPostText,\r\n//             likesCount:0\r\n//         };\r\n//        state.posts.push(newPost);\r\n//        state.newPostText=' ';\r\n\r\n//         }\r\n\r\n//         else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n//         state.newPostText= action.newText;\r\n\r\n//         }\r\n\r\n//     return state;\r\n// }\r\n\r\n\r\nexport default profileReducer;","module.exports = __webpack_public_path__ + \"static/media/Ava.5b753808.jfif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__g1-KE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2p2ui\",\"loginBlock\":\"Header_loginBlock__19xNe\"};"],"sourceRoot":""}