{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ava","contact","postsBlock","postos","content","item","Post","props","react_default","a","createElement","className","s","src","message","like","maxLength","maxLengthCreator","MyPosts","React","memo","postsElements","Object","toConsumableArray","posts","reverse","map","p","MyPosts_Post_Post","key","id","likesCount","AddPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","ProfileStatusWithHooks","Component","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","_ref","profile","error","style","formSummaryError","createField","Input","type","keys","contacts","ProfileData","_ref2","isOwner","doToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","objectWithoutProperties","preloader","photos","large","userPhoto","target","files","length","savePhoto","ProfileInfo_ProfileDataForm","initialValues","formData","saveProfile","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUsersProfile","getStatus","refreshPforile","prevProps","prevState","snapshot","components_Profile_Profile","assign","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/1.803cb17e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__3TOvn\",\"contact\":\"ProfileInfo_contact__Gsk5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2AHtZ\",\"postos\":\"MyPosts_postos__1seO0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__XKQNj\",\"item\":\"Post_item__fGuty\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  \r\n  return (\r\n\r\n    <div className={s.item}>\r\n      <img src='https://womenstalk.ru/wp-content/uploads/fhairs/2017/06/modnyye-korotkiye-muzhskiye-strizhki-1.jpg' />\r\n\r\n          { props.message } \r\n      <div>\r\n          <button >\r\n        <span>like {props.like}</span>\r\n          </button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validdator/validators';\r\nimport { Textarea } from '../../common/Preloader/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  // componentDidMount() {\r\n  //   setTimeout(() => {\r\n  //     setState({a:15})\r\n  //   },3000)\r\n  // }\r\n  //Внутри PureComponent все это есть \r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return  nextProps != this.props || nextState !=this.state\r\n  // }\r\n\r\n  let postsElements = [...props.posts].reverse()\r\n    .map(p => <Post  key={p.id} message={p.message} like={p.likesCount} />\r\n    );\r\n  // let myPostElements = React.createRef()\r\n  let onAddPost = (values) => {\r\n\r\n    props.addPost(values.newPostText);\r\n\r\n  };\r\n  //redux-form добавили \r\n  // let onPostChange = () => {\r\n  //   let text = myPostElements.current.value;\r\n  //   props.updateNewPostText(text)\r\n  //   //props.updateNewPostText(text)\r\n  //   //props.dispatch({type:'UPDATE-NEW-POST-TEXT', newText: text});\r\n  // }\r\n  return (\r\n\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n\r\n      <AddPostFormRedux onSubmit={onAddPost} />\r\n\r\n      <div className={s.postos}>\r\n        {postsElements}\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n\r\n})\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field placeholder=\"ADD POST\" name='newPostText' component={Textarea}\r\n        validate={[required, maxLength]} />\r\n\r\n      <div>\r\n        <button >Add post</button>\r\n      </div>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n  form: \"AddPostFormRedux\"\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;","import React, { useEffect, useState } from 'react';\r\n\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    // statusInputRef = React.createRef() удоляем потому что у нас input есть value \r\n\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect(() =>{\r\n        \r\n        setStatus(props.status) \r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n       \r\n         setEditMode(true)\r\n    }\r\n    \r\n        \r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        \r\n        props.updateStatus(status)\r\n    \r\n       \r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n       \r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div >\r\n                {!editMode &&\r\n                    <div>\r\n                        <b>Status: </b>\r\n                        <span onDoubleClick={activateEditMode} >\r\n                            {props.status || \"no status\"}\r\n                        </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div>\r\n                {editMode &&\r\n                    <div>\r\n\r\n                        <input onChange={onStatusChange} autoFocus={true} \r\n                        onBlur={deactivateEditMode} value={status}\r\n                            />\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\n\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    \r\n    // statusInputRef = React.createRef() удоляем потому что у нас input есть value \r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        // console.log(\"this:\", this) не понял почему он зделал это\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n        \r\n        // дабавили метод setState было раньше this.state.editMode = true\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        \r\n        this.props.updateStatus(this.state.status)\r\n    \r\n       \r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n            status: this.props.status\r\n        })}\r\n        // console.log(\"componentDidUpdate\") прикольно можно видеть как state обновлется\r\n    }\r\n    \r\n\r\n    render() {\r\n        console.log(\"render\")\r\n        return (\r\n\r\n            <div>\r\n                <div >\r\n                    {!this.state.editMode &&\r\n                        <div>\r\n                            <span onDoubleClick={this.activateEditMode}>\r\n                                {this.props.status || \"no status\"}\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    {this.state.editMode &&\r\n                        <div>\r\n\r\n                            <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                             value={this.state.status} />\r\n\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default ProfileStatus;\r\n","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../../common/Preloader/FormsControls/FormsControls';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/Preloader/FormsControls/FormsControls.module.css'\r\n\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit,error}) =>  { \r\n    return <form onSubmit={handleSubmit}>\r\n    \r\n    <div><button >Save</button></div> \r\n    {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n  <div>\r\n    <b>Full Name</b>: {createField(\"Full Name\",\"fullName\",Input,)}\r\n  </div>\r\n  <div>\r\n    <b>About me</b>: {createField(\"About me\",\"aboutMe\" , Input)}\r\n  </div>\r\n  <div>\r\n    <b>Looking for a job</b>: {createField(\"\",\"lookingForAJob\",Input,[],{type: \"checkbox\"})}\r\n  </div>\r\n\r\n    <div>\r\n      <b>My profesional skils  </b>: {createField(\"My profesional skils\",\"lookingForAJobDescription\",Textarea, [])}\r\n    </div>\r\n  \r\n  <div>\r\n    <b>Contacts</b>: {Object.keys(profile.contacts).map(key=> {\r\n      return <div key={key} className={s.contact} > \r\n        <b>{key}:</b> {createField(key,\"contacts.\" + key,Input,)}\r\n      </div>\r\n\r\n    }) }\r\n  </div>\r\n  </form>\r\n  }\r\n\r\n  const ProfileDataFormReduxForm = reduxForm({  form: 'edit-profile'    })(ProfileDataForm);\r\n\r\n  export default ProfileDataFormReduxForm","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/Ava.jfif'\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileInfo = ({profile, ...props}) => {\r\n\r\n  \r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  let [editMode, setEditMode] = useState(false);\r\n  \r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])  \r\n    }\r\n  }\r\n  const onSubmit = (formData) =>{\r\n     props.saveProfile(formData).then (\r\n       ()=>{\r\n        setEditMode(false)\r\n       }\r\n     )\r\n    \r\n    \r\n  }\r\n  return (\r\n\r\n    <div className={s.content}>\r\n      <div>\r\n        {/* <img src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350' /> */}\r\n      </div>\r\n\r\n      <div className={s.ava}>\r\n\r\n        <img src={profile.photos.large || userPhoto} /> \r\n        {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n        {editMode \r\n        ? <ProfileDataForm  profile={profile} initialValues={profile} onSubmit={onSubmit} />  \r\n        : <ProfileData profile={profile} doToEditMode={() => {setEditMode(true)}} isOwner={props.isOwner}   />  }\r\n       \r\n       \r\n\r\n\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n        <button onClick= {profile.lookingForAJob}></button>\r\n    \r\n\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n  )\r\n\r\n}\r\n  const ProfileData = ({profile, isOwner, doToEditMode}) => { \r\n        \r\n        return <div>\r\n          {isOwner && <div><button onClick={  doToEditMode}>Edit</button></div> }\r\n        <div>\r\n          <b>Full Name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n          <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n          <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        \r\n\r\n        {profile.lookingForAJob &&\r\n\r\n          <div>\r\n            <b>My profesional skils  </b>: {profile.lookingForAJobDescription}\r\n          </div>\r\n        }\r\n        <div>\r\n          <b>Contacts</b>: {Object.keys(profile.contacts).map(key=> {\r\n            return <Contact  key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n\r\n          }) }\r\n        </div>\r\n        </div>\r\n\r\n}\r\n\r\nconst Contact =({contactTitle, contactValue}) => {\r\n  return <div className={s.contact}><b>{contactTitle}:</b> {contactValue}</div>\r\n    \r\n} \r\n\r\nexport default ProfileInfo;","\r\nimport React from 'react'\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapDispatchToProps =  (dispatch) => {\r\n  return {\r\n    addPost: (newPostText)=> {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    } ,\r\n    // updateNewPostText: ()=> { \r\n    //   dispatch(updateNewPostTextActionCreator());\r\n      \r\n    // }\r\n  }\r\n}\r\nlet mapStateToProps = (state) => {\r\n\r\n  return {\r\n  posts: state.profilePage.posts,\r\n  newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n  \r\n      \r\n    return (\r\n    <div className={s.content}>\r\n    <ProfileInfo profile={props.profile}  \r\n    status= {props.status} updateStatus={props.updateStatus} isOwner={props.isOwner}  savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n    \r\n    <MyPostsContainer \r\n    />\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUsersProfile, savePhoto, updateStatus, saveProfile } from '../../redux/profile-reducer';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshPforile() {\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n\r\n    this.props.getUsersProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  \r\n  componentDidMount() {\r\n\r\n    this.refreshPforile()\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshPforile()\r\n    }\r\n\r\n  }\r\n\r\n\r\n  //забыл передать userId сюда this.props.getUsersProfile()\r\n  render() {\r\n    // if (!this.props.isAuth  ) return <Redirect to={\"/login\"}/>\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} isOwner={!this.props.match.params.userId}\r\n        status={this.props.status} updateStatus={this.props.updateStatus} savePhoto={this.props.savePhoto} saveProfile={this.props.saveProfile}  />\r\n    )\r\n  }\r\n}\r\n\r\n// of compose let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n//withAuthRedirect.js мы перемистили все туда \r\n\r\n// (props) => {\r\n//   if (!this.props.isAuth  ) return <Redirect to={\"/login\"}/>\r\n//   return <ProfileContainer {...props} />\r\n// }\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n  // isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUsersProfile, getStatus, updateStatus, savePhoto,saveProfile }),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n//compose of let withUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\n\r\n\r\n\r\n// export default connect(mapStateToProps, {getUsersProfile}) (withUrlDataContainerComponent);\r\n\r\n"],"sourceRoot":""}